apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
  labels:
    app: n8n
    app.kubernetes.io/name: n8n
    app.kubernetes.io/part-of: n8n-app
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      initContainers:
      - name: volume-permissions
        image: busybox:1.36
        command: ["sh", "-c", "chown -R 1000:1000 /data"]
        volumeMounts:
        - name: n8n-data
          mountPath: /data
      - name: wait-for-postgres
        image: postgres:17-alpine
        command: ['sh', '-c']
        args:
        - |
          until pg_isready -h postgres-service.infrastructure.svc.cluster.local -p 5432 -U $POSTGRES_USER; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
      volumes:
      - name: n8n-data
        persistentVolumeClaim:
          claimName: n8n-pvc
      containers:
      - name: n8n
        image: docker.n8n.io/n8nio/n8n
        ports:
        - containerPort: 5678
          name: http
        env:
        - name: DB_TYPE
          value: "postgresdb"
        - name: DB_POSTGRESDB_HOST
          value: "postgres-service.infrastructure.svc.cluster.local"
        - name: DB_POSTGRESDB_PORT
          value: "5432"
        - name: DB_POSTGRESDB_DATABASE
          value: "n8n"
        - name: DB_POSTGRESDB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: N8N_PORT
          value: "5678"
        - name: N8N_PROTOCOL
          value: "https"
        - name: N8N_HOST
          value: "n8n.n8n.svc.cluster.local"
        - name: WEBHOOK_URL
          value: "https://n8n.thiemo.click/"
        - name: NODE_ENV
          value: "production"
        - name: GENERIC_TIMEZONE
          value: "Europe/Berlin"
        - name: TZ
          value: "Europe/Berlin"
        - name: N8N_RUNNERS_ENABLED
          value: "true"
        - name: N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
          value: "true"
        volumeMounts:
        - name: n8n-data
          mountPath: /home/node/.n8n
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz/readiness
            port: 5678
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"