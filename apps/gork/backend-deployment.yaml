apiVersion: apps/v1
kind: Deployment
metadata:
  name: gork-backend
  namespace: gork
  labels:
    app: gork-backend
    app.kubernetes.io/name: gork-backend
    app.kubernetes.io/part-of: gork-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gork-backend
  template:
    metadata:
      labels:
        app: gork-backend
    spec:
      containers:
      - name: gork-backend
        image: thiemotorres/gork-backend:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-url
              key: database-url
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: gork-jwt-secret
              key: jwt-secret
        - name: ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: CORS_ORIGINS
          value: "https://gork.thiemo.click"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"